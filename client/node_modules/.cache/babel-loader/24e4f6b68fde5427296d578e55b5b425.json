{"ast":null,"code":"var _jsxFileName = \"/Users/jackboike/WebstormProjects/countries/client/src/components/CountryList.js\";\nimport { useQuery, gql } from '@apollo/client';\nimport client from \"./apollo.client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FEED_QUERY = gql`\n    {\n        query {\n            getCountries {\n                name\n                native\n                languages\n                capital\n            }\n        }\n    }\n`;\n\nconst CountryList = () => {\n  let data = [];\n  client.query({\n    query: FEED_QUERY\n  }).then(result => data = result);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this))\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CountryList;\nexport default CountryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryList\");","map":{"version":3,"sources":["/Users/jackboike/WebstormProjects/countries/client/src/components/CountryList.js"],"names":["useQuery","gql","client","FEED_QUERY","CountryList","data","query","then","result","map","item","name"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;;AAEA,MAAMC,UAAU,GAAGF,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;;AAaA,MAAMG,WAAW,GAAG,MAAM;AACtB,MAAIC,IAAI,GAAG,EAAX;AACAH,EAAAA,MAAM,CACLI,KADD,CACO;AACHA,IAAAA,KAAK,EAAEH;AADJ,GADP,EAICI,IAJD,CAIMC,MAAM,IAAIH,IAAI,GAAGG,MAJvB;AAMA,sBACI;AAAA,cACKH,IAAI,iBACD;AAAA,gBACKA,IAAI,CAACI,GAAL,CAAUC,IAAD,iBACN;AAAA,kBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAnBD;;KAAMP,W;AAqBN,eAAeA,WAAf","sourcesContent":["import { useQuery, gql } from '@apollo/client';\nimport client from \"./apollo.client\";\n\nconst FEED_QUERY = gql`\n    {\n        query {\n            getCountries {\n                name\n                native\n                languages\n                capital\n            }\n        }\n    }\n`;\n\nconst CountryList = () => {\n    let data = []\n    client\n    .query({\n        query: FEED_QUERY\n    })\n    .then(result => data = result);\n\n    return (\n        <div>\n            {data && (\n                <>\n                    {data.map((item) => (\n                        <p>{item.name}</p>\n                    ))}\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default CountryList;\n\n\n"]},"metadata":{},"sourceType":"module"}