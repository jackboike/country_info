{"ast":null,"code":"var _jsxFileName = \"/Users/jackboike/WebstormProjects/countries/client/src/components/CountryList.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery, gql } from '@apollo/client';\nimport client from \"./apollo.client\";\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { CardDeck } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FEED_QUERY = gql`\n        query {\n            getCountries {\n                name\n                emoji\n            }\n        }\n`;\n\nconst CountryList = () => {\n  _s();\n\n  const [data, setData] = useState([{}]);\n  const [arr, setArr] = useState([1, 1, 1, 1, 1, 1]);\n  const parameters = [\"languages\", \"currency\", \"capital\", \"native\", \"phone\", \"continent\"];\n  let blueHex = \"#1982FC\";\n  client.query({\n    query: FEED_QUERY\n  }).then(result => {\n    setData(result.data.getCountries);\n    console.log(result);\n  }).catch(error => {\n    console.log(error);\n  });\n  let toggledCard = {\n    boxShadow: \"1px 3px 1px #9E9E9E\",\n    textAlign: \"center\",\n    backgroundColor: \"#1982FC\"\n  };\n  let nonToggledCard = {\n    boxShadow: \"1px 3px 1px #9E9E9E\",\n    textAlign: \"center\",\n    backgroundColor: \"#FFFFFF\"\n  };\n\n  const changeParameters = (param, index) => {\n    if (parameters.includes(param)) {\n      let i = parameters.indexOf(param);\n      parameters.splice(i, 1);\n    } else {\n      parameters.push(param);\n    } // setToggles(arr => [...arr, toggles[index] === 0 ? 1 : 0)\n\n\n    let toggles = arr;\n\n    if (toggles[index] === 0) {\n      toggles[index] = 1;\n    } else {\n      toggles[index] = 0;\n    }\n\n    setArr([...toggles]);\n    console.log(parameters);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: 15\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardDeck, {\n      style: {\n        margin: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        style: arr[0] === 1 ? toggledCard : nonToggledCard,\n        onClick: () => {\n          changeParameters(\"languages\", 0);\n          console.log(arr);\n        },\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: \"Languages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        style: arr[1] === 1 ? toggledCard : nonToggledCard,\n        onClick: () => changeParameters(\"currency\", 1),\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: \"Currency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        style: arr[2] === 1 ? toggledCard : nonToggledCard,\n        onClick: () => changeParameters(\"capital\", 2),\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: \"Capital\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        style: arr[3] === 1 ? toggledCard : nonToggledCard,\n        onClick: () => changeParameters(\"native\", 3),\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: \"Native\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        style: arr[4] === 1 ? toggledCard : nonToggledCard,\n        onClick: () => changeParameters(\"phone\", 4),\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        style: arr[5] === 1 ? toggledCard : nonToggledCard,\n        onClick: () => changeParameters(\"continent\", 5),\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: \"Continent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), data.map(function (d, idx) {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: 300,\n          margin: 15,\n          boxShadow: \"1px 3px 1px #9E9E9E\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          style: {\n            fontSize: 40,\n            padding: 5\n          },\n          children: d.emoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            style: {\n              fontSize: 25\n            },\n            children: d.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CountryList, \"cXhby7nbVaF4OVoF5UlHKiez0CQ=\");\n\n_c = CountryList;\nexport default CountryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryList\");","map":{"version":3,"sources":["/Users/jackboike/WebstormProjects/countries/client/src/components/CountryList.js"],"names":["useQuery","gql","client","React","useState","Button","Card","CardDeck","FEED_QUERY","CountryList","data","setData","arr","setArr","parameters","blueHex","query","then","result","getCountries","console","log","catch","error","toggledCard","boxShadow","textAlign","backgroundColor","nonToggledCard","changeParameters","param","index","includes","i","indexOf","splice","push","toggles","marginLeft","margin","map","d","idx","width","fontSize","padding","emoji","name"],"mappings":"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","sourcesContent":["import { useQuery, gql } from '@apollo/client';\nimport client from \"./apollo.client\";\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {CardDeck} from \"react-bootstrap\";\nconst FEED_QUERY = gql`\n        query {\n            getCountries {\n                name\n                emoji\n            }\n        }\n`;\n\nconst CountryList = () => {\n    const [data, setData] = useState([{}]);\n    const [arr, setArr] = useState([1, 1, 1, 1, 1, 1]);\n\n    const parameters = [\n        \"languages\",\n        \"currency\",\n        \"capital\",\n        \"native\",\n        \"phone\",\n        \"continent\"\n    ]\n\n    let blueHex = \"#1982FC\";\n    client\n        .query({\n            query: FEED_QUERY\n        })\n        .then((result) => {\n            setData(result.data.getCountries);\n            console.log(result);\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n\n    let toggledCard = {\n        boxShadow: \"1px 3px 1px #9E9E9E\",\n        textAlign: \"center\",\n        backgroundColor: \"#1982FC\"\n    }\n\n    let nonToggledCard = {\n        boxShadow: \"1px 3px 1px #9E9E9E\",\n        textAlign: \"center\",\n        backgroundColor: \"#FFFFFF\"\n    }\n\n    const changeParameters = (param, index) => {\n        if (parameters.includes(param)) {\n            let i = parameters.indexOf(param)\n            parameters.splice(i, 1);\n        } else {\n            parameters.push(param);\n        }\n        // setToggles(arr => [...arr, toggles[index] === 0 ? 1 : 0)\n        let toggles = arr;\n        if (toggles[index] === 0) {\n            toggles[index] = 1\n        } else {\n            toggles[index] = 0\n        }\n        setArr([...toggles]);\n        console.log(parameters)\n\n\n    }\n\n\n    return (\n\n        <div style={{marginLeft: 15}}>\n            <CardDeck style={{margin: 20}}>\n                <Card\n                    style={arr[0] === 1 ? toggledCard : nonToggledCard}\n                    onClick={() => {changeParameters(\"languages\", 0); console.log(arr)}}\n                >\n                    <Card.Body>\n                        Languages\n                    </Card.Body>\n                </Card>\n                <Card\n                    style={arr[1] === 1 ? toggledCard : nonToggledCard}\n                    onClick={() => changeParameters(\"currency\", 1)}\n                >\n                    <Card.Body>\n                        Currency\n                    </Card.Body>\n                </Card>\n                <Card\n                    style={arr[2] === 1 ? toggledCard : nonToggledCard}\n                    onClick={() => changeParameters(\"capital\", 2)}\n                >\n                    <Card.Body>\n                        Capital\n                    </Card.Body>\n                </Card>\n                <Card\n                    style={arr[3] === 1 ? toggledCard : nonToggledCard}\n                    onClick={() => changeParameters(\"native\", 3)}\n                >\n                    <Card.Body>\n                        Native\n                    </Card.Body>\n                </Card>\n                <Card\n                    style={arr[4] === 1 ? toggledCard : nonToggledCard}\n                    onClick={() => changeParameters(\"phone\", 4)}\n                >\n                    <Card.Body>\n                        Phone\n                    </Card.Body>\n                </Card>\n                <Card\n                    style={arr[5] === 1 ? toggledCard : nonToggledCard}\n                    onClick={() => changeParameters(\"continent\", 5)}\n                >\n                    <Card.Body>\n                        Continent\n                    </Card.Body>\n                </Card>\n            </CardDeck>\n            {data.map(function(d, idx){\n                return (\n                    <Card style={{width: 300, margin: 15, boxShadow: \"1px 3px 1px #9E9E9E\"}}>\n                        <Card.Header style={{fontSize: 40, padding: 5}}>\n                            {d.emoji}\n                        </Card.Header>\n                        <Card.Body>\n                            <Card.Title style={{fontSize: 25}}>\n                                {d.name}\n                            </Card.Title>\n                        </Card.Body>\n                    </Card>\n                )\n            })}\n        </div>\n    );\n};\n\n\nexport default CountryList;\n"]},"metadata":{},"sourceType":"module"}