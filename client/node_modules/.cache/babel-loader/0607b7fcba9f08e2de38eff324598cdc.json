{"ast":null,"code":"var _jsxFileName = \"/Users/jackboike/WebstormProjects/countries/client/src/components/CountryList.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery, gql } from '@apollo/client';\nimport client from \"./apollo.client\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FEED_QUERY = gql`\n        query {\n            getCountries {\n                name\n                # check the docs for more info\n            }\n        }\n`;\n\nconst CountryList = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  client.query({\n    query: FEED_QUERY\n  }).then(result => {\n    setData(result);\n  }).catch(error => {\n    console.log(error);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this))\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CountryList, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n\n_c = CountryList;\nexport default CountryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryList\");","map":{"version":3,"sources":["/Users/jackboike/WebstormProjects/countries/client/src/components/CountryList.js"],"names":["useQuery","gql","client","React","useState","FEED_QUERY","CountryList","data","setData","query","then","result","catch","error","console","log","map","item","name"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,UAAU,GAAGJ,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,MAAMK,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AAEAF,EAAAA,MAAM,CACDO,KADL,CACW;AACHA,IAAAA,KAAK,EAAEJ;AADJ,GADX,EAIKK,IAJL,CAIWC,MAAD,IAAY;AACdH,IAAAA,OAAO,CAACG,MAAD,CAAP;AACH,GANL,EAOKC,KAPL,CAOYC,KAAD,IAAW;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GATL;AAWA,sBACI;AAAA,cACKN,IAAI,iBACD;AAAA,gBACKA,IAAI,CAACS,GAAL,CAAUC,IAAD,iBACN;AAAA,kBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA1BD;;GAAMZ,W;;KAAAA,W;AA4BN,eAAeA,WAAf","sourcesContent":["import { useQuery, gql } from '@apollo/client';\nimport client from \"./apollo.client\";\nimport React, { useState } from 'react';\n\nconst FEED_QUERY = gql`\n        query {\n            getCountries {\n                name\n                # check the docs for more info\n            }\n        }\n`;\n\nconst CountryList = () => {\n\n    const [data, setData] = useState([]);\n\n    client\n        .query({\n            query: FEED_QUERY\n        })\n        .then((result) => {\n            setData(result);\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n\n    return (\n        <div>\n            {data && (\n                <>\n                    {data.map((item) => (\n                        <p>{item.name}</p>\n                    ))}\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default CountryList;\n\n\n"]},"metadata":{},"sourceType":"module"}