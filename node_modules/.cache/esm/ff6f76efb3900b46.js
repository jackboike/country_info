let Continents,Countries,_;_b39‍.x([["resolvers",()=>resolvers],["default",()=>_b39‍.o]]);_b39‍.w("./dbConnectors",[["Continents",["Continents"],function(v){Continents=v}],["Countries",["Countries"],function(v){Countries=v}]]);_b39‍.w("lodash",[["default",["_"],function(v){_=v}]]);

// Resolver map



       const resolvers = {
    Query: {
        getCountry: (root, { id }) => {
            return new Promise(( resolve, object) => {
                Countries.findById(id, (err, country) => {
                    if (err) _.reject(err)
                    else resolve(country)
                })
            })
        },
        getCountries: () => Countries.find(),
        getContinents: () => Continents.find()

    },
    Mutation: {
        addContinent: (_, {input}) => {
            Continents.create({code: input.code, name: input.name}, function (err, obj) {
                if (err) _.reject(err)
                else return input
            });
        }
    }

};



_b39‍.d(resolvers);